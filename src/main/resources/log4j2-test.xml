<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2003-2021 江苏沃得农业机械股份有限公司,All Rights Reserved.
  ~ Project: IovDataCenter
  ~ File: log4j2-test.xml
  ~ Date: 2021/07/10 16:16:10
  ~ Author: 黄明明,信息部
  -->

<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<!--<configuration monitorInterval="5">-->
<configuration>
    <!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->

    <!--变量配置-->
    <Properties>
        <!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符-->
        <!-- %logger{36} 表示 Logger 名字最长36个字符 -->
        <!--        <property name="LOG_PATTERN" value="%date{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"/>-->
        <property name="LOG_PATTERN" value="%yellow{%date{yyyy-MM-dd HH:mm:ss.SSS}} %magenta{[%thread]} %highlight{[%-5level]} %cyan{%logger{1.}} - %white{%msg%n}"/>
        <!-- 定义日志存储的路径 -->
        <property name="baseDir" value="Logs"/>
    </Properties>

    <appenders>
        <!--Filter 由 onMatch,onMismatch 控制-->
        <!--onMatch 匹配本级及以上-->
        <!--onMismatch 匹配本级以下-->
        <!--而当 onMatch,onMismatch 过滤器匹配时要采取的操作 ACCEPT,DENY,NEUTRAL-->
        <!--ACCEPT 接受-->
        <!--DENY 拒绝-->
        <!--NEUTRAL 交给下一级处理-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout disableAnsi="false" pattern="${LOG_PATTERN}"/>

            <!--多个过滤器需要放在 Filters 标签下-->
            <Filters>
                <!--warning及以上的拒绝,以下的交给下一级处理-->
<!--                <ThresholdFilter level="warn" onMatch="DENY" onMismatch="NEUTRAL"/>-->
                <ThresholdFilter level="debug" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>
        </console>

        <RollingRandomAccessFile name="InfoFile" fileName="${baseDir}/info.log" append="false"
                                 filePattern="${baseDir}/info/$${date:yyyy-MM}/$${date:yyyy-MM-dd}/info-%d{yyyy-MM-dd}-%i.log.gz">

            <Filters>
                <ThresholdFilter level="error" onMatch="DENY" onMismatch="NEUTRAL"/>
                <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            </Filters>

            <PatternLayout pattern="%d %p %c{1.} [%t] %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="50 MB"/>
            </Policies>
            <!--默认只保存50个文件，超过删除-->
            <DefaultRolloverStrategy max="50">
                <!--指定删除策略: 匹配的路径,目录深度-->
                <!--路径下超过目录深度的不会被匹配到-->
                <!--注意: 不仅仅只匹配 log4j2 产生的日志,所有符合条件的日志都会被匹配到-->
                <Delete basePath="${baseDir}" maxDepth="4">
                    <IfFileName glob="info/*/*/info-*.log.gz"/>
                    <IfAny>
                        <IfLastModified age="30d"/>
                        <IfAccumulatedFileSize exceeds="500 MB"/>
                    </IfAny>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingRandomAccessFile>

        <RollingRandomAccessFile name="ErrorFile" fileName="${baseDir}/error.log" append="false"
                                 filePattern="${baseDir}/error/$${date:yyyy-MM}/$${date:yyyy-MM-dd}/error-%d{yyyy-MM-dd}-%i.log.gz">

            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>

            <PatternLayout pattern="%d %p %c{1.} [%t] %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="50 MB"/>
            </Policies>
            <DefaultRolloverStrategy max="50">
                <Delete basePath="${baseDir}" maxDepth="4">
                    <IfFileName glob="error/*/*/error-*.log.gz"/>
                    <IfAny>
                        <IfLastModified age="45d"/>
                        <IfAccumulatedFileSize exceeds="800 MB"/>
                    </IfAny>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingRandomAccessFile>

    </appenders>

    <!--Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。-->
    <!--然后定义loggers，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <AsyncLogger name="com.wdnj.xxb" level="debug" includeLocation="false" additivity="false">
            <appender-ref ref="Console"/>
            <AppenderRef ref="InfoFile"/>
            <AppenderRef ref="ErrorFile"/>
        </AsyncLogger>

        <AsyncLogger name="Log" level="info" includeLocation="false" additivity="false">
            <appender-ref ref="Console"/>
            <AppenderRef ref="InfoFile"/>
            <AppenderRef ref="ErrorFile"/>
        </AsyncLogger>

        <root level="info" includeLocation="false">
            <appender-ref ref="Console"/>
            <appender-ref ref="InfoFile"/>
            <appender-ref ref="ErrorFile"/>
        </root>
    </loggers>

</configuration>